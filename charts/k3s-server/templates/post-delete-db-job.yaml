apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "k3s-server.fullname" . }}-delete-db"
  labels:
    {{- include "k3s-server.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "post-delete"
    "helm.sh/hook-delete-policy": "hook-succeeded"
spec:
  template:
    metadata:
      labels:
        {{- include "k3s-server.labels" . | nindent 8 }}
    spec:
      containers:
        - name: drop-database-k3s
          image: postgres:alpine
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
            - |
              export DSN=postgres://{{ $.Values.postgres.k3s.username }}:{{ $.Values.postgres.k3s.password }}@{{ $.Values.postgres.k3s.hostname }}:{{ $.Values.postgres.k3s.port }}?sslmode=disable
              psql $DSN -c "DROP DATABASE IF EXISTS {{ include "k3s-server.sanitizeName" . }};"
        - name: drop-database-hs
          image: postgres:alpine
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
            - |
              export DSN=postgres://{{ $.Values.postgres.hs.username }}:{{ $.Values.postgres.hs.password }}@{{ $.Values.postgres.hs.hostname }}:{{ $.Values.postgres.hs.port }}?sslmode=disable
              psql $DSN -c "DROP DATABASE IF EXISTS {{ include "k3s-server.sanitizeNameHeadscale" . }};"
      restartPolicy: Never
      serviceAccount: default
      serviceAccountName: default