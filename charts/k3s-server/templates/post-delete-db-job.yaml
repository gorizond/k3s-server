apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "k3s-server.fullname" . }}-delete-db"
  labels:
    {{- include "k3s-server.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "post-delete"
    "helm.sh/hook-delete-policy": "hook-succeeded"
spec:
  template:
    metadata:
      labels:
        {{- include "k3s-server.labels" . | nindent 8 }}
    spec:
      containers:
        - name: drop-database-k3s
          image: {{ .Values.k3s.database.image }}
          imagePullPolicy: IfNotPresent
          env:
            - name: K3S_DB_USERNAME
              value: "{{ .Values.k3s.database.username }}"
            - name: K3S_DB_PASSWORD
              value: "{{ .Values.k3s.database.password }}"
            - name: K3S_DB_HOSTNAME
              value: "{{ .Values.k3s.database.hostname }}"
            - name: K3S_DB_PORT
              value: "{{ .Values.k3s.database.port }}"
            - name: K3S_DB_QUERY
              value: "{{ .Values.k3s.database.query }}"
            - name: K3S_DB_NAME
              value: {{ include "k3s-server.sanitizeName" . }}
          command: ["sh", "-c"]
          args:
            - |
              {{ .Values.k3s.database.connectionCli }} "DROP DATABASE IF EXISTS $K3S_DB_NAME;"
        - name: drop-database-hs
          image: {{ .Values.hs.database.image }}
          imagePullPolicy: IfNotPresent
          env:
            - name: HS_DB_USERNAME
              value: "{{ .Values.hs.database.username }}"
            - name: HS_DB_PASSWORD
              value: "{{ .Values.hs.database.password }}"
            - name: HS_DB_HOSTNAME
              value: "{{ .Values.hs.database.hostname }}"
            - name: HS_DB_PORT
              value: "{{ .Values.hs.database.port }}"
            - name: HS_DB_QUERY
              value: "{{ .Values.hs.database.query }}"
            - name: HS_DB_NAME
              value: {{ include "k3s-server.sanitizeNameHeadscale" . }}
          command: ["sh", "-c"]
          args:
            - |
              {{ .Values.k3s.database.connectionCli }} "DROP DATABASE IF EXISTS $HS_DB_NAME;"
      restartPolicy: Never
      serviceAccount: default
      serviceAccountName: default